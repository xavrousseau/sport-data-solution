# ==========================================================================================
# Fichier     : scripts/init_minio_structure.py
# Objet       : Initialise la structure du bucket MinIO pour le projet Sport Data Solution
#
# Description :
#   - V√©rifie l'existence du bucket principal, le cr√©e s'il est absent
#   - Cr√©e les dossiers/prefixes n√©cessaires (simulant des r√©pertoires) en ajoutant un
#     fichier vide '.keep' dans chacun pour forcer la cr√©ation dans MinIO/S3
#
# Pr√©requis :
#   - Le bucket cible (ex‚ÄØ: 'sportdata') est renseign√© dans les variables du script/.env
#   - Le module minio_helper.py doit √™tre disponible et correctement configur√©
#   - Les variables d'environnement MinIO doivent √™tre bien renseign√©es dans le .env
#
# Utilisation :
#   python scripts/init_minio_structure.py
#
# Auteur      : Xavier Rousseau | Juillet 2025
# ==========================================================================================

from minio_helper import MinIOHelper
from botocore.exceptions import ClientError

# ------------------------------------------------------------------------------------------
# Param√®tres de structure‚ÄØ: nom du bucket et "dossiers" √† cr√©er
# ------------------------------------------------------------------------------------------
BUCKET = "sportdata"  # Nom du bucket principal (adapter si besoin)
PREFIXES = [
    "referentiels/",
    "simulation/",
    "raw/",
    "resultats/prime_sportive/",
    "resultats/jours_bien_etre/",
    "exports/"
]

# ------------------------------------------------------------------------------------------
# Fonction : Cr√©er le bucket s'il n'existe pas d√©j√†
# ------------------------------------------------------------------------------------------
def create_bucket_if_missing():
    """
    V√©rifie l'existence du bucket MinIO, et le cr√©e si absent.

    Le test se fait via un head_bucket. Si le bucket n'existe pas (erreur 404/NoSuchBucket),
    il est cr√©√© imm√©diatement. En cas d'autre erreur, celle-ci est affich√©e et remont√©e.
    """
    print("üõ† D√©marrage de create_bucket_if_missing()")
    helper = MinIOHelper()
    print(f"üì° Tentative de connexion √† : {helper.endpoint_url}")

    try:
        helper.client.head_bucket(Bucket=BUCKET)
        print(f"‚úÖ Bucket '{BUCKET}' d√©j√† existant.")
    except ClientError as e:
        error_code = e.response["Error"]["Code"]
        # Codes typiques : "404" ou "NoSuchBucket" (MinIO/S3)
        if error_code in ["404", "NoSuchBucket"]:
            print(f"üì¶ Cr√©ation du bucket '{BUCKET}'...")
            helper.client.create_bucket(Bucket=BUCKET)
            print(f"‚úÖ Bucket '{BUCKET}' cr√©√©.")
        else:
            print(f"üß® Erreur head_bucket : {e}")
            raise

# ------------------------------------------------------------------------------------------
# Fonction : Cr√©er la structure de pr√©fixes/dossiers dans le bucket
# ------------------------------------------------------------------------------------------
def create_prefix_structure():
    """
    Cr√©e les "dossiers" (pr√©fixes S3) dans le bucket en y d√©posant un fichier vide .keep.

    Ceci permet d‚Äôavoir une structure apparente de r√©pertoires dans l‚Äôinterface MinIO ou S3.
    """
    helper = MinIOHelper()
    for prefix in PREFIXES:
        key = prefix + ".keep"  # Convention : un fichier vide par dossier
        try:
            helper.client.put_object(Bucket=BUCKET, Key=key, Body=b"")
            print(f"üìÇ Pr√©fixe forc√© : {prefix}")
        except Exception as e:
            print(f"‚ùå Erreur put_object pour {key} : {e}")

# ------------------------------------------------------------------------------------------
# Point d'entr√©e du script (ex√©cution directe uniquement)
# ------------------------------------------------------------------------------------------
if __name__ == "__main__":
    create_bucket_if_missing()
    create_prefix_structure()

# ------------------------------------------------------------------------------------------
# Fin du fichier : ce script peut √™tre lanc√© seul pour initialiser la structure MinIO
# ------------------------------------------------------------------------------------------
