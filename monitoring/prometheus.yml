# ====================================================================================
# Fichier : prometheus.yml
# Objectif : Configuration du monitoring Prometheus pour la stack Sport Data Solution
# Auteur : Xavier Rousseau | Juin 2025
#
# Contenus :
# - Intervalle global de scraping et d‚Äô√©valuation
# - Monitoring de Prometheus, Redpanda, Spark, ntfy
# - Exemples comment√©s pour exporter des m√©triques PostgreSQL et application Python
# ====================================================================================

global:
  scrape_interval: 15s          # ‚è±Ô∏è Fr√©quence de collecte des m√©triques (d√©faut : 1 min)
  evaluation_interval: 15s      # ‚è±Ô∏è Fr√©quence d‚Äô√©valuation des r√®gles (alertes, etc.)

scrape_configs:

  # ------------------------------------------------------------------------------
  # 1. Monitoring de Prometheus lui-m√™me (auto-scraping)
  # ------------------------------------------------------------------------------
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # ------------------------------------------------------------------------------
  # 2. Monitoring de Redpanda (Broker Kafka) via Admin API (public_metrics)
  #    ‚ö†Ô∏è Le port 9644 doit √™tre expos√© dans le docker-compose
  # ------------------------------------------------------------------------------
  - job_name: 'redpanda'
    metrics_path: /public_metrics      # Path sp√©cifique pour Redpanda metrics
    static_configs:
      - targets: ['redpanda:9644']    # Utilise le nom de service docker-compose

  # ------------------------------------------------------------------------------
  # 3. Monitoring de Spark (UI Web, m√©triques Prometheus int√©gr√©es)
  #    ‚ö†Ô∏è Spark doit √™tre lanc√© avec l‚Äôoption --conf spark.metrics.conf
  # ------------------------------------------------------------------------------
  - job_name: 'spark'
    metrics_path: /metrics/prometheus/
    static_configs:
      - targets: ['spark:4040']       # Port expos√© dans docker-compose (UI & metrics)

  # ------------------------------------------------------------------------------
  # 4. (Optionnel) Monitoring PostgreSQL (Exporter √† activer et ajouter dans le compose)
  #    üëâ D√©commente si tu ajoutes un postgres_exporter dans ta stack !
  # ------------------------------------------------------------------------------
  # - job_name: 'postgres'
  #   static_configs:
  #     - targets: ['postgres_exporter:9187']

  # ------------------------------------------------------------------------------
  # 5. (Optionnel) Monitoring d‚Äôune application Python personnalis√©e
  #    üëâ L‚Äôapp doit exposer un endpoint /metrics compatible Prometheus
  # ------------------------------------------------------------------------------
  # - job_name: 'app'
  #   static_configs:
  #     - targets: ['sportdata-app:8000']

  # ------------------------------------------------------------------------------
  # 6. Monitoring de ntfy (notifications push, alertes)
  # ------------------------------------------------------------------------------
  - job_name: 'ntfy'
    metrics_path: /metrics
    static_configs:
      - targets: ['ntfy:80']

# ====================================================================================
# FIN DU FICHIER ‚Äî prometheus.yml
# ====================================================================================
