# ====================================================================================
# FICHIER : docker-compose.override.monitoring.yml
# OBJET  : Monitoring technique via Prometheus (collecte) + Grafana (visualisation)
# ====================================================================================

services:

  # ============================================================================
  # 1. Prometheus — Scrape les métriques des services (Redpanda, Airflow, etc.)
  # ============================================================================
  sport-prometheus:
    image: prom/prometheus:latest
    container_name: sport-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro  # Fichier de configuration Prometheus
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    restart: unless-stopped
    networks:
      - sport-network

  # ============================================================================
  # 2. Grafana — Visualise les métriques via dashboards (Prometheus comme source)
  # ============================================================================
  sport-grafana:
    image: grafana/grafana:latest
    container_name: sport-grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin       # À sécuriser en prod
      GF_SECURITY_ADMIN_PASSWORD: admin   # À changer en prod
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - sport-network
      
# ====================================================================================
# Réseau commun aux services de la stack
# ====================================================================================
networks:
  sport-network:
    driver: bridge

# ====================================================================================
# Volumes persistants pour les données de métriques et dashboards
# ====================================================================================
volumes:
  prometheus_data:
  grafana_data:
