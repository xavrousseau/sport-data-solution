# ==========================================================================================
# Fichier    : docker-compose.override.metabase.yml (full .env)
# Objectif   : Ajouter Metabase pour exploration BI/visualisation des donn√©es PostgreSQL
# Auteur     : Xavier Rousseau | Juin 2025
#
# Ce fichier permet d‚Äôajouter √† la stack‚ÄØ:
#   - Un outil BI no-code (Metabase) pour explorer les donn√©es, cr√©er dashboards, KPIs, exports.
#   - Configuration 100% par .env (aucune info sensible ou statique dans ce fichier).
#   - Pr√™t pour usage local, cloud, CI/CD, d√©mo client, onboarding √©quipe.
# ==========================================================================================


services:

  # ----------------------------------------------------------------------------------------
  # sport-metabase ‚Äî Service d‚Äôexploration BI/visualisation des donn√©es PostgreSQL
  #
  # üéØ  R√¥le‚ÄØ: Permet d‚Äôexplorer, requ√™ter, visualiser, partager et exporter les donn√©es m√©tiers,
  #            sans √©crire de code SQL.
  #
  # üîó  Acc√®s web : http://localhost:${METABASE_PORT} (port externe configurable via .env)
  #
  # üóÑ  Persistance de la configuration Metabase (utilisateurs, connexions, dashboards‚Ä¶) :
  #     - Si besoin, monter un volume local (voir docs Metabase), non requis pour un simple POC.
  #
  # ‚ö°Ô∏è  D√©marrage :
  #     - Attends que PostgreSQL soit pr√™t (`depends_on`)
  #     - Se connecte directement √† la base m√©tier gr√¢ce aux variables d‚Äôenvironnement propag√©es.
  # ----------------------------------------------------------------------------------------
  sport-metabase:
    image: metabase/metabase                      # Image officielle Metabase (auto-upgradable)
    container_name: sport-metabase
    restart: always

    # -----------------------------------------------------------
    # Expose le port web Metabase √† l‚Äôh√¥te (par d√©faut : 3000)
    # Variable ${METABASE_PORT} pilot√©e via .env (√©vite conflits)
    # -----------------------------------------------------------
    ports:
      - "${METABASE_PORT}:3000"

    # -----------------------------------------------------------
    # Ne d√©marre qu‚Äôapr√®s PostgreSQL (critique pour la connexion)
    # -----------------------------------------------------------
    depends_on:
      - sport-postgres

    # -----------------------------------------------------------
    # Param√®tres d‚Äôenvironnement :
    # - Connexion automatique √† la base m√©tier
    # - Personnalisation du fuseau horaire JVM si besoin
    # -----------------------------------------------------------
    environment:
      MB_DB_TYPE: postgres                # Utilise PostgreSQL comme backend
      MB_DB_DBNAME: ${POSTGRES_DB}        # Nom de la base de donn√©es cible
      MB_DB_PORT: ${POSTGRES_PORT}        # Port d‚Äô√©coute de PostgreSQL
      MB_DB_USER: ${POSTGRES_USER}        # Utilisateur DB (s√©curis√© via .env)
      MB_DB_PASS: ${POSTGRES_PASSWORD}    # Mot de passe DB (s√©curis√© via .env)
      MB_DB_HOST: ${POSTGRES_HOST}        # H√¥te du service DB (service compose)
      JAVA_TIMEZONE: ${MB_TIMEZONE}       # Fuseau horaire JVM (optionnel, via .env)
    networks:
      - sportdata_net

# ==========================================================================================
# FIN DE FICHIER ‚Äî docker-compose.override.metabase.yml
# ==========================================================================================
